Network Simution Task
Objective: The objective of this task is to set up a simple computer network using Cisco Packet Tracer, understand its interface, and configure basic network settings. By the end of this task, you should be able to connect devices, assign IP addresses, test communication using the ping command, and troubleshoot basic connectivity issues.
Step 1: Get the Right Software
1.	Download Cisco Packet Tracer – This is a free tool that lets us create virtual networks from Cisco’s official website.
2.	Install the software – Followed the on-screen instructions to set it up on my computer.
3.	Open the software – Once installed, launch Packet Tracer to make sure it works.

Step 2: Understand the Basics
Before we build the network, let’s understand the key areas of Packet Tracer:
•	Device Palette – This is where you find all network devices like computers, routers, and switches.
•	Workspace – This is the blank area where we will build our network.
•	Toolbar – This contains tools to connect devices and test connections.

Step 3: Build the Network
1.	Add devices to the workspace 
o	Drag and drop two computers (PCs) and one switch into the workspace.
2.	Connect the devices 
o	Click on the cable icon in the toolbar.
o	Choose Copper Straight-Through Cable and connect: 
	PC1 to the switch
	PC2 to the switch
3.	Assign IP addresses to the computers 
o	Click on PC1, go to Desktop > IP Configuration, and set: 
	IP Address: 192.168.1.2
	Subnet Mask: 255.255.255.0
o	Click on PC2, go to Desktop > IP Configuration, and set: 
	IP Address: 192.168.1.3
	Subnet Mask: 255.255.255.0

Step 4: Check If the Computers Can Talk
1.	Open PC1, go to Command Prompt, and type:
nginx

ping 192.168.1.3
2.	If everything is working, you will see replies like this:
Python

Reply from 192.168.1.3: bytes=32 time<1ms TTL=128
This means PC1 can communicate with PC2! 🎉
3.	If you see “Request timed out”, the computers are not connected properly. Check:
o	If cables are connected correctly.
o	If IP addresses are correctly assigned.

Step 5: Save Your Work
1.	Click File > Save As and give your project a name.
2.	This allows you to open the network later without setting it up again.
Connectivity Test Results
Scenario 1: Successful Connectivity
If the network is correctly set up, I will receive replies from 192.168.1.3, confirming that PC1 and PC2 can communicate.
output:
python
Pinging 192.168.1.3 with 32 bytes of data:
Reply from 192.168.1.3: bytes=32 time<1ms TTL=128
Reply from 192.168.1.3: bytes=32 time<1ms TTL=128
Reply from 192.168.1.3: bytes=32 time<1ms TTL=128
Reply from 192.168.1.3: bytes=32 time<1ms TTL=128

Ping statistics for 192.168.1.3:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss)
Scenario 2: Connectivity Issue
If there is an issue, I may see:
csharp

Pinging 192.168.1.3 with 32 bytes of data:
Request timed out.
Request timed out.
Request timed out.
Request timed out.

Ping statistics for 192.168.1.3:
    Packets: Sent = 4, Received = 0, Lost = 4 (100% loss)
Possible causes:
•	Incorrect IP address assignment.
•	Wrong cable type.
•	Devices not properly connected.
•	Firewall or security settings blocking ICMP packets.

